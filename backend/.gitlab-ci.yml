image: python:3.10

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "${CI_PROJECT_DIR}/.cache/pip"
  XDG_CACHE_HOME: "$CI_PROJECT_DIR/.cache"
  POETRY_VERSION: "1.1.11"

# Cache modules in between jobs
cache: &package_cache
  key:
    files:
      - backend/poetry.lock
      - backend/.gitlab-ci.yml
    # prefix: $CI_JOB_NAME
    prefix: poetry
  policy: pull
  paths:
    - .cache
    - backend/.venv/
  when: always

stages:
  - prepare
  - test
  - build

before_script:
  - pip install poetry==${POETRY_VERSION}
  - cd backend

dependencies:
  stage: prepare
  cache:
    <<: *package_cache
    policy: pull-push
  script:
    - poetry env use python
    - source .venv/bin/activate
    - python -m pip install --upgrade pip
    - poetry export --without-hashes -n |
        tee requirements.txt
    - poetry export --dev --without-hashes -n |
        tee requirements-dev.txt |
        pip install -r /dev/stdin
    # pip cache filled with all package downloads
    - poetry build
  artifacts:
    paths:
      - backend/requirements.txt
      - backend/requirements-dev.txt
    exclude:
      - backend/.venv/**/__pycache__/*
    when: on_success

formatting:
  stage: test
  script:
    - poetry install
    - source .venv/bin/activate
    - poetry run isort . --check --verbose --diff --color
    - poetry run black . --check --verbose --diff --color --fast

linting:
  stage: test
  script:
    - poetry install
    - poetry run pydocstyle . --verbose
    - poetry run flake8 --config .flake8 --extend-ignore=D,E203 --verbose --statistics

coverage:
  stage: test
  script:
    - poetry install
    - poetry run coverage run -m pytest --verbose --junitxml=report.xml
    - poetry run coverage report --fail-under=80
    - poetry run coverage xml
  artifacts:
    when: always
    reports:
      cobertura: backend/coverage.xml
      junit: backend/report.xml

build:
  stage: build
  script:
    - poetry build
    - pip install dist/*.whl
  artifacts:
    paths:
      - backend/dist/*.whl
